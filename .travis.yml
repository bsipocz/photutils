# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of
# packages that can be included can be found here:
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise
addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.6
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - MAIN_CMD='python setup.py'
        - SETUP_CMD='test'
        - EVENT_TYPE='pull_request push'
        - CONDA_DEPENDENCIES='Cython scipy scikit-image matplotlib'
        - CONDA_CHANNELS='astropy-ci-extras astropy'
        - SETUP_XVFB=True
        - ASTROPY_USE_SYSTEM_PYTEST=1

    matrix:
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.4 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'

matrix:
    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Try MacOS X
        - os: osx
          env: SETUP_CMD='test'

        # Do a coverage test.
        - os: linux
          env: SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env: PYTHON_VERSION=2.7 SETUP_CMD='build_docs -w'
               CONDA_DEPENDENCIES='Cython scipy scikit-image scikit-learn matplotlib jupyter'
               SPHINX_VERSION='>1.6'
        - os: linux
          env: SETUP_CMD='build_docs -w'
               CONDA_DEPENDENCIES='Cython scipy scikit-image scikit-learn matplotlib jupyter'
               EVENT_TYPE='pull_request push cron'
               SPHINX_VERSION='>1.6'

        # Now try Astropy dev and LTS versions with the latest Python.
        # We disable LTS testing until astropy 3.0 is out, as the current
        # stable is also the LTS
        - os: linux
          env: ASTROPY_VERSION=development
               EVENT_TYPE='pull_request push cron'
        #- os: linux
        #  env: PYTHON_VERSION=2.7 ASTROPY_VERSION=lts PYTEST_VERSION=2.7
        #- os: linux
        #  env: PYTHON_VERSION=3.5 ASTROPY_VERSION=lts PYTEST_VERSION=2.7

        # Try all python versions and Numpy versions. Since we can assume that
        # the Numpy developers have taken care of testing Numpy with different
        # versions of Python, we can vary Python and Numpy versions at the same
        # time.
        - os: linux
          env: PYTHON_VERSION=3.4 NUMPY_VERSION=1.9
               PIP_DEPENDENCIES='pytest>=3.1'
        - os: linux
          env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.10
        - os: linux
          env: NUMPY_VERSION=1.11
        - os: linux
          env: NUMPY_VERSION=1.12

        # Try with optional dependencies disabled
        - os: linux
          env: PYTHON_VERSION=2.7 CONDA_DEPENDENCIES='Cython'
        - os: linux
          env: CONDA_DEPENDENCIES='Cython'

        # Try numpy pre-release
        - os: linux
          env: NUMPY_VERSION=prerelease
               EVENT_TYPE='pull_request push cron'

        # Do a PEP8 test with pycodestyle
        - os: linux
          env: MAIN_CMD='pycodestyle photutils --count' SETUP_CMD=''

install:
    - git clone -b conda_pin_4327 git://github.com/bsipocz/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

script:
   - $MAIN_CMD $SETUP_CMD

after_success:
    - if [[ $SETUP_CMD == *coverage* ]]; then
          coveralls --rcfile='photutils/tests/coveragerc';
      fi
